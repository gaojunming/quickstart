<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- 使用注解管理事务,使用繁琐,不推荐,不过可以混合使用 。注意：注解式事务springboot项目中会自动配置开启-->
	<!-- <tx:annotation-driven transaction-manager="transactionManager"/> -->
	<!-- 事务通知,transactionManager bean由spring框架自动声明 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<!-- 事务细节配置 -->
		<tx:attributes>
			<!-- 配置insert,update,delete开头的方法事务传播行为默认为REQUIRED,抛出任何异常都将触发回滚，隔离级别为读写提交 -->
			<tx:method name="insert*" rollback-for="Throwable" isolation="READ_COMMITTED"/>
			<tx:method name="add*" rollback-for="Throwable" isolation="READ_COMMITTED"/>
			<tx:method name="update*" rollback-for="Throwable" isolation="READ_COMMITTED"/>
			<tx:method name="edit*" rollback-for="Throwable" isolation="READ_COMMITTED"/>
			<tx:method name="delete*" rollback-for="Throwable" isolation="READ_COMMITTED"/>
			<tx:method name="remove*" rollback-for="Throwable" isolation="READ_COMMITTED"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- 切点表达式表示当com.kzks包下的以及子包下的service包下的任意类的任意方法任意参数任意返回类型时的调用将触发此切点 -->
		<aop:pointcut id="transactionPointcut"
			expression="execution(* cn.bugcatch.quickstart..service..*.*(..))" />
		<!-- 当切点触发时通知事务管理器 -->
		<aop:advisor pointcut-ref="transactionPointcut"
			advice-ref="transactionAdvice" />
	</aop:config>
</beans>